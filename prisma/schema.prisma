// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  userId    Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  address   String?
  carts     Cart[]
  orders    Order[]
}

model Product {
  productId   Int     @id @default(autoincrement())
  name        String
  description String?
  price       Float
  stock       Int
  cartItems   CartItem[]
  orderItems  OrderItem[]
}

model Cart {
  cartId    Int       @id @default(autoincrement())
  userId    Int
  user      User      @relation(fields: [userId], references: [userId])
  items     CartItem[]
}

model CartItem {
  id        Int     @id @default(autoincrement())
  cartId    Int
  cart      Cart    @relation(fields: [cartId], references: [cartId])
  productId Int
  product   Product @relation(fields: [productId], references: [productId])
  quantity  Int
}

model Order {
  orderId   Int       @id @default(autoincrement())
  orderDate DateTime  @default(now())
  status    String
  userId    Int
  user      User      @relation(fields: [userId], references: [userId])
  items     OrderItem[]
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int
  order     Order   @relation(fields: [orderId], references: [orderId])
  productId Int
  product   Product @relation(fields: [productId], references: [productId])
  quantity  Int
  price     Float
}
